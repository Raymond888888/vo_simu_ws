<?xml version="1.0"?>
<sdf version="1.7">
    <world name="thermal_camera_robot_world">
        <physics name="1ms" type="ignored">
            <max_step_size>0.001</max_step_size>
            <real_time_factor>1.0</real_time_factor>
        </physics>
        <plugin filename="libignition-gazebo-physics-system.so" name="ignition::gazebo::systems::Physics"></plugin>
        <plugin filename="libignition-gazebo-user-commands-system.so" name="ignition::gazebo::systems::UserCommands"></plugin>
        <plugin filename="libignition-gazebo-scene-broadcaster-system.so" name="ignition::gazebo::systems::SceneBroadcaster"></plugin>
        <plugin filename="ignition-gazebo-sensors-system" name="ignition::gazebo::systems::Sensors">
            <render_engine>ogre2</render_engine>
        </plugin>

        <gui fullscreen="0">

            <!-- 3D scene -->
            <plugin filename="GzScene3D" name="3D View">
                <ignition-gui>
                    <title>3D View</title>
                    <property type="bool" key="showTitleBar">false</property>
                    <property type="string" key="state">docked</property>
                </ignition-gui>

                <engine>ogre2</engine>
                <scene>scene</scene>
                <ambient_light>0.4 0.4 0.4</ambient_light>
                <background_color>0.8 0.8 0.8</background_color>
                <!-- <camera_pose>-6 0 6 0 0.5 0</camera_pose> -->
            </plugin>

            <!-- Plugins that add functionality to the scene -->


            <plugin filename="EntityContextMenuPlugin" name="Entity context menu">
                <ignition-gui>
                    <property key="state" type="string">floating</property>
                    <property key="width" type="double">5</property>
                    <property key="height" type="double">5</property>
                    <property key="showTitleBar" type="bool">false</property>
                </ignition-gui>
            </plugin>
            <!-- <plugin filename="GzSceneManager" name="Scene Manager">
                <ignition-gui>
                    <property key="resizable" type="bool">false</property>
                    <property key="width" type="double">5</property>
                    <property key="height" type="double">5</property>
                    <property key="state" type="string">floating</property>
                    <property key="showTitleBar" type="bool">false</property>
                </ignition-gui>
            </plugin> -->
            <plugin filename="InteractiveViewControl" name="Interactive view control">
                <ignition-gui>
                    <property key="resizable" type="bool">false</property>
                    <property key="width" type="double">5</property>
                    <property key="height" type="double">5</property>
                    <property key="state" type="string">floating</property>
                    <property key="showTitleBar" type="bool">false</property>
                </ignition-gui>
            </plugin>
            <plugin filename="CameraTracking" name="Camera Tracking">
                <ignition-gui>
                    <property key="resizable" type="bool">false</property>
                    <property key="width" type="double">5</property>
                    <property key="height" type="double">5</property>
                    <property key="state" type="string">floating</property>
                    <property key="showTitleBar" type="bool">false</property>
                </ignition-gui>
            </plugin>


            <!-- ///////////////////////////////////////////////////////// -->

            <!-- World control -->
            <plugin filename="WorldControl" name="World control">
                <ignition-gui>
                    <title>World control</title>
                    <property type="bool" key="showTitleBar">false</property>
                    <property type="bool" key="resizable">false</property>
                    <property type="double" key="height">72</property>
                    <property type="double" key="width">121</property>
                    <property type="double" key="z">1</property>

                    <property type="string" key="state">floating</property>
                    <anchors target="3D View">
                        <line own="left" target="left" />
                        <line own="bottom" target="bottom" />
                    </anchors>
                </ignition-gui>

                <play_pause>true</play_pause>
                <step>true</step>
                <start_paused>true</start_paused>
                <service>/world/Moving_robot/control</service>
                <stats_topic>/world/Moving_robot/stats</stats_topic>
            </plugin>

            <!-- World statistics -->
            <plugin filename="WorldStats" name="World stats">
                <ignition-gui>
                    <title>World stats</title>
                    <property type="bool" key="showTitleBar">false</property>
                    <property type="bool" key="resizable">false</property>
                    <property type="double" key="height">110</property>
                    <property type="double" key="width">290</property>
                    <property type="double" key="z">1</property>

                    <property type="string" key="state">floating</property>
                    <anchors target="3D View">
                        <line own="right" target="right" />
                        <line own="bottom" target="bottom" />
                    </anchors>
                </ignition-gui>

                <sim_time>true</sim_time>
                <real_time>true</real_time>
                <real_time_factor>true</real_time_factor>
                <iterations>true</iterations>
                <topic>/world/Moving_robot/stats</topic>

            </plugin>

            <!-- Inspector -->
            <plugin filename="ComponentInspector" name="Component inspector">
                <ignition-gui>
                    <property type="string" key="state">docked</property>
                </ignition-gui>
            </plugin>

            <!-- Entity tree -->
            <plugin filename="EntityTree" name="Entity tree"></plugin>

            <!-- Transform Control -->
            <plugin filename="TransformControl" name="Transform Control"></plugin>

            <plugin filename="ImageDisplay" name="Image Display">
                <ignition-gui>
                    <title>Thermal camera</title>
                    <property key="state" type="string">floating</property>
                    <property type="double" key="width">350</property>
                    <property type="double" key="height">315</property>
                </ignition-gui>
                <topic>thermal_camera</topic>
                <topic_picker>false</topic_picker>
            </plugin>


            <!-- KeyPublisher plugin-->
            <plugin filename="KeyPublisher" name="Key Publisher" />


        </gui>

        <light type="directional" name="sun">
            <cast_shadows>true</cast_shadows>
            <pose>0 0 10 0 0 0</pose>
            <diffuse>0.8 0.8 0.8 1</diffuse>
            <specular>0.2 0.2 0.2 1</specular>
            <attenuation>
                <range>1000</range>
                <constant>0.9</constant>
                <linear>0.01</linear>
                <quadratic>0.001</quadratic>
            </attenuation>
            <direction>-0.5 0.1 -0.9</direction>
        </light>

        <atmosphere type="adiabatic">
            <temperature>295</temperature>
            <!--
              This is a more exaggerated temperature gradient, which produces a
              temperature range of ~11.5 kelvin for objects in the thermal camera
              view. Typical temperature gradient is -0.0065 K/m which produces a
              temperature range of 0.75 kelvin
            -->
            <temperature_gradient>0.1</temperature_gradient>
        </atmosphere>

        <model name="ground_plane">
            <static>true</static>
            <link name="link">
                <collision name="collision">
                    <geometry>
                        <plane>
                            <normal>0 0 1</normal>
                        </plane>
                    </geometry>
                </collision>
                <visual name="visual">
                    <geometry>
                        <plane>
                            <normal>0 0 1</normal>
                            <size>100 100</size>
                        </plane>
                    </geometry>
                    <material>
                        <ambient>0.8 0.8 0.8 1</ambient>
                        <diffuse>0.8 0.8 0.8 1</diffuse>
                        <specular>0.8 0.8 0.8 1</specular>
                    </material>
                </visual>
            </link>
        </model>

        <!-- <model name="box">
            <pose>-1 1 0.5 0 0 0</pose>
            <link name="box_link">
                <inertial>
                    <inertia>
                        <ixx>1</ixx>
                        <ixy>0</ixy>
                        <ixz>0</ixz>
                        <iyy>1</iyy>
                        <iyz>0</iyz>
                        <izz>1</izz>
                    </inertia>
                    <mass>1.0</mass>
                </inertial>
                <collision name="box_collision">
                    <geometry>
                        <box>
                            <size>1 1 1</size>
                        </box>
                    </geometry>
                </collision>

                <visual name="box_visual">
                    <geometry>
                        <box>
                            <size>1 1 1</size>
                        </box>
                    </geometry>
                    <material>
                        <ambient>1 0 0 1</ambient>
                        <diffuse>1 0 0 1</diffuse>
                        <specular>1 0 0 1</specular>
                    </material>
                    <plugin filename="ignition-gazebo-thermal-system" name="ignition::gazebo::systems::Thermal">
                        <temperature>285.0</temperature>
                    </plugin>
                </visual>
            </link>
        </model> -->

        <!-- VEHICLE/CAR -->
        <model name='vehicle_of_thermal_cam' canonical_link='chassis'>
            <pose relative_to='world'>1 -2 0.1 0 0 3.14</pose>
            <!--the pose is relative to the world by default-->

            <link name='chassis'>
                <pose relative_to='__model__'>0.5 0 0.4 0 0 0</pose>
                <inertial>
                    <!--inertial properties of the link mass, inertia matix-->
                    <mass>1.14395</mass>
                    <inertia>
                        <ixx>0.126164</ixx>
                        <ixy>0</ixy>
                        <ixz>0</ixz>
                        <iyy>0.416519</iyy>
                        <iyz>0</iyz>
                        <izz>0.481014</izz>
                    </inertia>
                </inertial>
                <visual name='visual'>
                    <geometry>
                        <box>
                            <size>2.0 1.0 0.5</size> <!--question: this size is in meter-->
                        </box>
                    </geometry>
                    <!--let's add color to our link-->
                    <material>
                        <ambient>0.0 0.0 1.0 1</ambient>
                        <diffuse>0.0 0.0 1.0 1</diffuse>
                        <specular>0.0 0.0 1.0 1</specular>
                    </material>
                </visual>
                <collision name='collision'>
                    <!--todo: describe why we need the collision-->
                    <geometry>
                        <box>
                            <size>2.0 1.0 0.5</size>
                        </box>
                    </geometry>
                </collision>
            </link>

            <!--let's build the left wheel-->
            <link name='left_wheel'>
                <pose relative_to="chassis">-0.5 0.6 0 -1.5707 0 0</pose> <!--angles are in radian-->
                <inertial>
                    <mass>2</mass>
                    <inertia>
                        <ixx>0.145833</ixx>
                        <ixy>0</ixy>
                        <ixz>0</ixz>
                        <iyy>0.145833</iyy>
                        <iyz>0</iyz>
                        <izz>0.125</izz>
                    </inertia>
                </inertial>
                <visual name='visual'>
                    <geometry>
                        <cylinder>
                            <radius>0.4</radius>
                            <length>0.2</length>
                        </cylinder>
                    </geometry>
                    <material>
                        <ambient>1.0 0.0 0.0 1</ambient>
                        <diffuse>1.0 0.0 0.0 1</diffuse>
                        <specular>1.0 0.0 0.0 1</specular>
                    </material>
                </visual>
                <collision name='collision'>
                    <geometry>
                        <cylinder>
                            <radius>0.4</radius>
                            <length>0.2</length>
                        </cylinder>
                    </geometry>
                </collision>
            </link>

            <!--copy and paste for right wheel but change position-->
            <link name='right_wheel'>
                <pose relative_to="chassis">-0.5 -0.6 0 -1.5707 0 0</pose> <!--angles are in radian-->
                <inertial>
                    <mass>1</mass>
                    <inertia>
                        <ixx>0.145833</ixx>
                        <ixy>0</ixy>
                        <ixz>0</ixz>
                        <iyy>0.145833</iyy>
                        <iyz>0</iyz>
                        <izz>0.125</izz>
                    </inertia>
                </inertial>
                <visual name='visual'>
                    <geometry>
                        <cylinder>
                            <radius>0.4</radius>
                            <length>0.2</length>
                        </cylinder>
                    </geometry>
                    <material>
                        <ambient>1.0 0.0 0.0 1</ambient>
                        <diffuse>1.0 0.0 0.0 1</diffuse>
                        <specular>1.0 0.0 0.0 1</specular>
                    </material>
                </visual>
                <collision name='collision'>
                    <geometry>
                        <cylinder>
                            <radius>0.4</radius>
                            <length>0.2</length>
                        </cylinder>
                    </geometry>
                </collision>
            </link>

            <frame name="caster_frame" attached_to='chassis'>
                <pose>0.8 0 -0.2 0 0 0</pose>
            </frame>

            <!--caster wheel-->
            <link name='caster'>
                <pose relative_to='caster_frame' />
                <inertial>
                    <mass>1</mass>
                    <inertia>
                        <ixx>0.1</ixx>
                        <ixy>0</ixy>
                        <ixz>0</ixz>
                        <iyy>0.1</iyy>
                        <iyz>0</iyz>
                        <izz>0.1</izz>
                    </inertia>
                </inertial>
                <visual name='visual'>
                    <geometry>
                        <sphere>
                            <radius>0.2</radius>
                        </sphere>
                    </geometry>
                    <material>
                        <ambient>0.0 1 0.0 1</ambient>
                        <diffuse>0.0 1 0.0 1</diffuse>
                        <specular>0.0 1 0.0 1</specular>
                    </material>
                </visual>
                <collision name='collision'>
                    <geometry>
                        <sphere>
                            <radius>0.2</radius>
                        </sphere>
                    </geometry>
                </collision>
            </link>


            <link name="thermal_camera">
                <!-- <pose>0.05 0.05 0.05 0 0 0</pose> -->
                <pose relative_to="chassis">0 0 0.5 0 0 0</pose> <!--angles are in radian-->
                <collision name="collision">
                    <geometry>
                        <box>
                            <size>0.1 0.1 0.1</size>
                        </box>
                    </geometry>
                </collision>
                <visual name="visual">
                    <geometry>
                        <box>
                            <size>0.1 0.1 0.1</size>
                        </box>
                    </geometry>
                </visual>
                <sensor name="thermal_camera" type="thermal">
                    <camera>
                        <horizontal_fov>1.047</horizontal_fov>
                        <image>
                            <width>320</width>
                            <height>240</height>
                            <format>L16</format>
                        </image>
                        <clip>
                            <near>0.1</near>
                            <far>100</far>
                        </clip>
                    </camera>
                    <always_on>1</always_on>
                    <update_rate>30</update_rate>
                    <visualize>true</visualize>
                    <topic>thermal_camera</topic>
                </sensor>
            </link>


            <!--connecting these links together using joints-->
            <joint name='left_wheel_joint' type='revolute'>
                <!--continous joint is not supported yet-->
                <pose relative_to='left_wheel' />
                <parent>chassis</parent>
                <child>left_wheel</child>
                <axis>
                    <xyz expressed_in='__model__'>0 1 0</xyz> <!--can be descired to any frame or even arbitrary frames-->
                    <limit>
                        <lower>-1.79769e+308</lower> <!--negative infinity-->
                        <upper>1.79769e+308</upper> <!--positive infinity-->
                    </limit>
                </axis>
            </joint>

            <joint name='right_wheel_joint' type='revolute'>
                <pose relative_to='right_wheel' />
                <parent>chassis</parent>
                <child>right_wheel</child>
                <axis>
                    <xyz expressed_in='__model__'>0 1 0</xyz>
                    <limit>
                        <lower>-1.79769e+308</lower> <!--negative infinity-->
                        <upper>1.79769e+308</upper> <!--positive infinity-->
                    </limit>
                </axis>
            </joint>

            <!--different type of joints ball joint-->
            <!--defult value is the child-->
            <joint name='caster_wheel' type='ball'>
                <parent>chassis</parent>
                <child>caster</child>
            </joint>

            <joint name='thermal_camera_joint' type='revolute'>
                <parent>chassis</parent>
                <child>thermal_camera</child>
                <axis>
                    <xyz expressed_in='__model__'>0 1 0</xyz>
                    <limit>
                        <lower>-1.79769e+308</lower> <!--negative infinity-->
                        <upper>1.79769e+308</upper> <!--positive infinity-->
                    </limit>
                </axis>
            </joint>

            <!--diff drive plugin-->
            <plugin filename="libignition-gazebo-diff-drive-system.so" name="ignition::gazebo::systems::DiffDrive">
                <left_joint>left_wheel_joint</left_joint>
                <right_joint>right_wheel_joint</right_joint>
                <wheel_separation>1.2</wheel_separation>
                <wheel_radius>0.4</wheel_radius>
                <odom_publish_frequency>1</odom_publish_frequency>
                <topic>cmd_vel</topic>
            </plugin>
        </model>

        <robot xmlns:xacro="http://ros.org/wiki/xacro"  name="tracked_vehicle">

            <xacro:property name="left_offset_y" value="0.287" /> 
            <xacro:property name="right_offset_y" value="-0.287" /> 
            <xacro:property name="swing_offset_x" value="-0.479" /> 
        
            <xacro:macro name="make_box_inertia" params="mass size_x size_y size_z">
                <inertial>
                    <mass value="${mass}" />
                    <inertia ixx="${mass * (size_y * size_y + size_z * size_z) / 12}" ixy="0" ixz="0" 
                             iyy="${mass * (size_z * size_z + size_x * size_x) / 12}" iyz="0" 
                             izz="${mass * (size_x * size_x + size_y * size_y) / 12}" />
                </inertial>
            </xacro:macro>
        
            <xacro:include filename="$(find mm_description)/urdf/tracked_base/single_track.urdf.xacro" />
            <xacro:include filename="$(find mm_description)/urdf/tracked_base/swing_arm.urdf.xacro" />
        
            <xacro:single_track prefix="left" offset_y="${left_offset_y}"/>
            <xacro:single_track prefix="right" offset_y="${right_offset_y}"/>
            <xacro:swing_arm mass="0.3" offset_x="${swing_offset_x}"/>
        
            <gazebo reference="vehicle_base_link">
                <material>Gazebo/DarkGrey</material>
            </gazebo>
            <gazebo reference="pusher_visual_left">
                <material>Gazebo/DarkGrey</material>
            </gazebo>
            <gazebo reference="pusher_visual_right">
                <material>Gazebo/DarkGrey</material>
            </gazebo>
        
            <link name="vehicle_base_link">
                <xacro:make_box_inertia mass="50" size_x="0.5" size_y="0.51" size_z="1" />
                <visual>
                    <geometry>
                        <!-- <box size="0.4 0.4 0.1" /> -->
                        <mesh filename="package://mm_description/meshes/vehicle/base_meter.STL" />
                    </geometry>
                </visual>
        
                <collision>
                    <geometry>
                        <box size="0.4 0.4 0.1" />
                        <!-- <mesh filename="package://mm_description/meshes/vehicle/base_meter.STL" /> -->
                    </geometry>
                </collision>
            </link>
        
            <joint name="left_track_joint" type="fixed">
                <origin xyz="0 ${left_offset_y} 0" rpy="0 0 0" />
                <parent link="vehicle_base_link" />
                <child link="left_body" />
            </joint>
        
            <joint name="right_track_joint" type="fixed">
                <origin xyz="0 ${right_offset_y} 0" rpy="0 0 0" />
                <parent link="vehicle_base_link" />
                <child link="right_body" />
            </joint>
        
            <link name="pusher_visual_left">
                <xacro:make_box_inertia mass="1" size_x="0.5" size_y="0.51" size_z="1" />
                <visual>
                    <geometry>
                        <box size="0.5 0.025  0.08" />
                    </geometry>
                </visual>
        
                <collision>
                    <geometry>
                        <box size="0.5 0.025  0.08" />
                    </geometry>
                </collision>
            </link>
            <link name="pusher_visual_right">
                <xacro:make_box_inertia mass="1" size_x="0.5" size_y="0.51" size_z="1" />
                <visual>
                    <geometry>
                        <box size="0.5 0.025  0.08" />
                    </geometry>
                </visual>
        
                <collision>
                    <geometry>
                        <box size="0.5 0.025 0.08" />
                    </geometry>
                </collision>
            </link>
        
            <joint name="pusher_visual_left_joint" type="fixed">
                <origin xyz="-0.27 0.12 0" rpy="0 0 0" />
                <parent link="vehicle_base_link" />
                <child link="pusher_visual_left" />
            </joint>
            <joint name="pusher_visual_right_joint" type="fixed">
                <origin xyz="-0.27 -0.12 0" rpy="0 0 0" />
                <parent link="vehicle_base_link" />
                <child link="pusher_visual_right" />
            </joint>
        
            <!-- virtual wheel base -->
            <xacro:include filename="$(find mm_description)/urdf/tracked_base/wheel_and_caster.xacro" />
        
            <xacro:property name="visual" value="false" />
            <xacro:property name="wheel_base_vertical_offset" value="${wheel_radius-0.08-0.01}" />
            <xacro:property name="dist_caster_front_back" value="0.9" /> <!-- distance between front caster and back caster-->
            <xacro:property name="dist_caster_left_right" value="${left_offset_y*2}" /> <!-- distance between front caster and back caster-->
            <xacro:wheel wheel_prefix="left" parent_link="vehicle_base_link" visual="${visual}">
                <origin xyz="0 ${left_offset_y} ${wheel_base_vertical_offset}" rpy="0 0 0" />
            </xacro:wheel>
            <xacro:wheel wheel_prefix="right" parent_link="vehicle_base_link" visual="${visual}">
                <origin xyz="0 ${right_offset_y} ${wheel_base_vertical_offset}" rpy="0 0 0" />
            </xacro:wheel>
            <xacro:caster caster_prefix="front_left" parent_link="vehicle_base_link" visual="${visual}" >
                <origin xyz="${dist_caster_front_back/2} ${dist_caster_left_right/2} ${wheel_base_vertical_offset - wheel_radius + caster_radius}" rpy="0 0 0" />
            </xacro:caster>
            <xacro:caster caster_prefix="front_right" parent_link="vehicle_base_link" visual="${visual}" >
                <origin xyz="${dist_caster_front_back/2} ${-dist_caster_left_right/2} ${wheel_base_vertical_offset - wheel_radius + caster_radius}" rpy="0 0 0" />
            </xacro:caster>
            <xacro:caster caster_prefix="back_left" parent_link="vehicle_base_link" visual="${visual}">
                <origin xyz="${-dist_caster_front_back/2} ${dist_caster_left_right/2} ${wheel_base_vertical_offset - wheel_radius + caster_radius}" rpy="0 0 0" />
            </xacro:caster>
            <xacro:caster caster_prefix="back_right" parent_link="vehicle_base_link" visual="${visual}">
                <origin xyz="${-dist_caster_front_back/2} ${-dist_caster_left_right/2} ${wheel_base_vertical_offset - wheel_radius + caster_radius}" rpy="0 0 0" />
            </xacro:caster>
        
            <!-- <link name="push_plate">
                <xacro:make_box_inertia mass="1" size_x="0.5" size_y="0.51" size_z="1" />
                <visual>
                    <geometry>
                        <box size="0.1 0.2 0.03" />
                    </geometry>
                </visual>
        
                <collision>
                    <geometry>
                        <box size="0.1 0.2 0.03" />
                    </geometry>
                </collision>
            </link> -->
        
            <joint name="push_plate_joint" type="fixed">
                <origin xyz="${swing_offset_x} 0 0" rpy="0 1 0" />
                <parent link="vehicle_base_link" />
                <child link="arm_connector" />
                <axis xyz="0 1 0"/>
            </joint>
        
            <!-- <transmission name="push_plate_joint_transmission">
                <type>transmission_interface/SimpleTransmission</type>
                <joint name="push_plate_joint">
                    <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
                </joint>
                <actuator name="push_plate_joint_motor">
                    <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
                    <mechanicalReduction>1</mechanicalReduction>
                </actuator>
            </transmission> -->
        
            <!-- ros_control for gazebo, should only load once!! -->
            <!-- <gazebo>
                <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
                    <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
                    <legacyModeNS>true</legacyModeNS>
                </plugin>
            </gazebo> -->
        </robot>
        



        <gazebo reference="${namespace}/${camera_frame_name}/thermal_camera_link">
            <sensor type="camera" name="mrs_thermal_camera_sensor">
                <update_rate>${frame_rate}</update_rate>
                <camera>
                    <horizontal_fov>${hfov}</horizontal_fov>
                    <image>
                        <format>R8G8B8</format>
                        <width>${3 * image_width}</width>
                        <height>${3 * image_height}</height>
                    </image>
                    <clip>
                        <near>0.1</near>
                        <far>300</far>
                    </clip>
                </camera>
                <plugin name="thermal_camera_controller" filename="libMRSGazeboThermalCameraPlugin.so">
                    <alwaysOn>true</alwaysOn>
                    <cameraName>${camera_suffix}</cameraName>
                    <updateRate>${frame_rate}</updateRate>
                    <imageTopicName>${camera_topic_name}/rgb_image</imageTopicName>
                    <cameraInfoTopicName>${camera_topic_name}/camera_info</cameraInfoTopicName>
                    <rawTemperatureTopicName>${camera_topic_name}/raw_temp_array</rawTemperatureTopicName>
                    <surroundingTemperature>20</surroundingTemperature>
                    <maximalTemperature>300</maximalTemperature>
                    <minimalTemperatureGreenColor>0.2</minimalTemperatureGreenColor>
                    <noiseStdDev>4.0</noiseStdDev>
                    <noiseStdDevMaxTemp>20.0</noiseStdDevMaxTemp>
                    <frameName>${camera_frame_name}</frameName>
                    <parentFrameName>${parent_frame_name}</parentFrameName>
                    <sensorBaseFrameName>${sensor_base_frame_name}</sensorBaseFrameName>
                    <x>${x}</x>
                    <y>${y}</y>
                    <z>${z}</z>
                    <roll>${roll}</roll>
                    <pitch>${pitch}</pitch>
                    <yaw>${yaw}</yaw>
                </plugin>
            </sensor>
        </gazebo>

        <!-- Moving Forward-->
        <plugin filename="libignition-gazebo-triggered-publisher-system.so" name="ignition::gazebo::systems::TriggeredPublisher">
            <input type="ignition.msgs.Int32" topic="/keyboard/keypress">
                <match field="data">16777235</match>
            </input>
            <output type="ignition.msgs.Twist" topic="/cmd_vel">
                linear: {x: 0.5}, angular: {z: 0.0}
            </output>
        </plugin>

        <!-- Moving Backward-->
        <plugin filename="libignition-gazebo-triggered-publisher-system.so" name="ignition::gazebo::systems::TriggeredPublisher">
            <input type="ignition.msgs.Int32" topic="/keyboard/keypress">
                <match field="data">16777237</match>
            </input>
            <output type="ignition.msgs.Twist" topic="/cmd_vel">
                linear: {x: -0.5}, angular: {z: 0.0}
            </output>
        </plugin>

        <!-- Rotating right-->
        <plugin filename="libignition-gazebo-triggered-publisher-system.so" name="ignition::gazebo::systems::TriggeredPublisher">
            <input type="ignition.msgs.Int32" topic="/keyboard/keypress">
                <match field="data">16777236</match>
            </input>
            <output type="ignition.msgs.Twist" topic="/cmd_vel">
                linear: {x: 0.0}, angular: {z: -0.5}
            </output>
        </plugin>

        <!--Rotating left-->
        <plugin filename="libignition-gazebo-triggered-publisher-system.so" name="ignition::gazebo::systems::TriggeredPublisher">
            <input type="ignition.msgs.Int32" topic="/keyboard/keypress">
                <match field="data">16777234</match>
            </input>
            <output type="ignition.msgs.Twist" topic="/cmd_vel">
                linear: {x: 0.0}, angular: {z: 0.5}
            </output>
        </plugin>


        <!-- MRS attacteher plugin  -->
        <!-- <plugin name="mrs_gazebo_link_attacher_plugin" filename="libMRSGazeboLinkAttacherPlugin.so"/> -->
        <!-- <plugin name="mrs_gazebo_link_attacher_plugin" filename="/home/raymond/catkin_ws/devel/lib/libMRSGazeboLinkAttacherPlugin.so"/> -->
        <!-- <include>
            <pose>1 0 0 0 0 1.570796</pose>
            <name>human_'rescue_randy'</name>
            <uri>https://fuel.ignitionrobotics.org/1.0/OpenRobotics/models/Rescue Randy</uri>
        </include>

        <include>
            <pose>2.25 .5 .1 0 0 1.570796</pose>
            <name>phone</name>
            <uri>https://fuel.ignitionrobotics.org/1.0/OpenRobotics/models/Samsung J8 Black</uri>
        </include>

        <include>
            <pose>2.25 -.5 .1 0 0 1.570796</pose>
            <name>backpack</name>
            <uri>https://fuel.ignitionrobotics.org/1.0/OpenRobotics/models/Backpack</uri>
        </include> -->

        <!-- @online{GazeboFuel-OpenRobotics-Rescue-Randy-Sitting,
            title={Rescue Randy Sitting},
            organization={Open Robotics},
            date={2021},
            month={February},
            day={4},
            author={OpenRobotics},
            url={https://fuel.gazebosim.org/1.0/OpenRobotics/models/Rescue Randy Sitting},
        } -->

        <!-- <include>
            <pose>4 -.5 .1 0 0 1.570796</pose>
            <name>sitting</name>
            <uri>https://fuel.ignitionrobotics.org/1.0/OpenRobotics/models/Rescue Randy Sitting</uri>
        </include> -->
        <!-- @online{GazeboFuel-Pine-Fortress-island,
        title={Fortress island},
        organization={Open Robotics},
        date={2022},
        month={May},
        day={4},
        author={Pine},
        url={https://fuel.gazebosim.org/1.0/Pine/models/Fortress island},
        } -->
        <!-- <include>
            <pose>0 0 0.1 0 0 0</pose>
            <name>island</name>
            <uri>https://fuel.ignitionrobotics.org/1.0/Pine/models/Fortress island</uri>
        </include> -->
    </world>

</sdf>